"use strict";
(self["webpackChunkfront_end"] = self["webpackChunkfront_end"] || []).push([["src_creator_widget_js"],{

/***/ "./src/creator/b64toblob.js":
/*!**********************************!*\
  !*** ./src/creator/b64toblob.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ b64toBlob)
/* harmony export */ });
function b64toBlob(b64Data) {
  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;
  var byteCharacters = atob(b64Data);
  var byteArrays = [];
  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
    var slice = byteCharacters.slice(offset, offset + sliceSize);
    var byteNumbers = new Array(slice.length);
    for (var i = 0; i < slice.length; i++) {
      byteNumbers[i] = slice.charCodeAt(i);
    }
    var byteArray = new Uint8Array(byteNumbers);
    byteArrays.push(byteArray);
  }
  var blob = new Blob(byteArrays, {
    type: contentType
  });
  return blob;
}

/***/ }),

/***/ "./src/creator/widget.js":
/*!*******************************!*\
  !*** ./src/creator/widget.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Widget)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _b64toblob__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./b64toblob */ "./src/creator/b64toblob.js");


function DeleteButton(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    id: "btn-delete",
    onClick: function onClick() {
      props.deleteItem(props.index);
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    height: "20",
    width: "20"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: "M6.5 17q-.625 0-1.062-.438Q5 16.125 5 15.5v-10H4V4h4V3h4v1h4v1.5h-1v10q0 .625-.438 1.062Q14.125 17 13.5 17ZM8 14h1.5V7H8Zm2.5 0H12V7h-1.5Z"
  })));
}
function Widget(props) {
  var item = props.item;
  var itemRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var onDragStart = function onDragStart(e) {
    e.dataTransfer.effectedAllowed = 'move';
    e.dataTransfer.setDragImage(e.target, 50000, 50000);

    // custom drag ghost
    var ghostNode = e.target.cloneNode(true);
    ghostNode.style.position = 'absolute';

    // show ghost pos
    ghostNode.style.top = e.pageY - e.target.offsetHeight / 2 + 'px';
    ghostNode.style.left = e.pageX - e.target.offsetWidth / 2 + 'px';
    ghostNode.style.height = e.target.offsetHeight + 'px';
    ghostNode.style.width = e.target.offsetWidth + 'px';
    ghostNode.style.opacity = '0.8';
    ghostNode.style.pointerEvents = 'none';

    // add id
    ghostNode.id = 'ghostNode';
    document.body.prepend(ghostNode);
    itemRef.current.classList.add('dragstart');
    if (props.onDragStart) {
      props.onDragStart(props.index);
    }
  };
  var onDrag = function onDrag(e) {
    //move node with mouse
    var ghostNode = document.querySelector('#ghostNode');
    ghostNode.style.top = e.pageY - e.target.offsetHeight / 2 + 'px';
    ghostNode.style.left = e.pageX - e.target.offsetWidth / 2 + 'px';
  };
  var onDragEnd = function onDragEnd(e) {
    // remove ghost node
    document.querySelector('#ghostNode').remove();
    // remove item style
    itemRef.current.classList.remove('dragstart');
  };
  var onDragEnter = function onDragEnter() {
    return itemRef.current.classList.add('dragover');
  };
  var onDragLeave = function onDragLeave() {
    return itemRef.current.classList.remove('dragover');
  };
  var onDragOver = function onDragOver(e) {
    return e.preventDefault();
  };
  var onDrop = function onDrop() {
    itemRef.current.classList.remove('dragover');
    props.onDrop(props.index);
  };
  function getWidget() {
    switch (item.type) {
      case 'Text':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", {
          className: "widget-text"
        }, item.text);
      case 'Question':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
          style: {
            width: "100%",
            height: "fit-content"
          }
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", {
          className: "widget-text"
        }, item.question), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", {
          className: "widget-text"
        }, item.answer));
      case 'Image':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
          className: "img-wrapper-small"
        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
          className: "img-preview",
          src: URL.createObjectURL((0,_b64toblob__WEBPACK_IMPORTED_MODULE_1__["default"])(item.file)),
          alt: item.name
        }));
      case 'Video':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("iframe", {
          src: "https://www.youtube.com/embed/" + item.youtubeId,
          style: {
            border: "none",
            margin: "10px",
            borderRadius: "5px"
          },
          title: "Video preview"
        });
      default:
        break;
    }
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    id: "widget",
    className: "round-border blue-border",
    draggable: true,
    ref: itemRef,
    onDragStart: onDragStart,
    onDrag: onDrag,
    onDragEnd: onDragEnd,
    onDragEnter: onDragEnter,
    onDragLeave: onDragLeave,
    onDragOver: onDragOver,
    onDrop: onDrop
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DeleteButton, {
    deleteItem: props.deleteItem,
    index: props.index
  }), getWidget());
}

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,